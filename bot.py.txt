import os
import telebot
import openai
from dotenv import load_dotenv
from telebot import types

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö —Å—Ä–µ–¥—ã
load_dotenv()
TELEGRAM_TOKEN = os.getenv("TELEGRAM_TOKEN")
OPENAI_API_KEY = os.getenv("OPENAI_API_KEY")
ADMIN_ID = 7117473695  # ‚Üê –∑–∞–º–µ–Ω–∏ –Ω–∞ —Å–≤–æ–π Telegram ID

bot = telebot.TeleBot(TELEGRAM_TOKEN)
client = openai.OpenAI(api_key=OPENAI_API_KEY)
user_data = {}

# –ó–∞–≥—Ä—É–∑–∫–∞ –±–∞–∑—ã –∑–Ω–∞–Ω–∏–π (system prompt)
def load_prompt():
    with open("system_prompt.txt", "r", encoding="utf-8") as f:
        return f.read()

# –ö–æ–º–∞–Ω–¥–∞ /start
@bot.message_handler(commands=['start'])
def start_handler(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add("üõç –ö–∞—Ç–∞–ª–æ–≥", "üì¶ –î–æ—Å—Ç–∞–≤–∫–∞ –∏ –æ–ø–ª–∞—Ç–∞")
    markup.add("üìù –û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É", "üí¨ –°–≤—è–∑–∞—Ç—å—Å—è")
    bot.send_message(message.chat.id,
                     "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ KOOL ‚Äî –º–∞–≥–∞–∑–∏–Ω –¥–∏–∑–∞–π–Ω–µ—Ä—Å–∫–æ–π –º–µ–±–µ–ª–∏ –∏ –¥–µ–∫–æ—Ä–∞. –í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π –ø—É–Ω–∫—Ç:",
                     reply_markup=markup)

# –ö–Ω–æ–ø–∫–∞: –ö–∞—Ç–∞–ª–æ–≥
@bot.message_handler(func=lambda message: message.text == "üõç –ö–∞—Ç–∞–ª–æ–≥")
def catalog_handler(message):
    bot.send_message(message.chat.id,
                     "–ù–∞—à–∏ –æ—Å–Ω–æ–≤–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏:\n\n"
                     "ü™ë –°—Ç—É–ª—å—è –∏ –∫—Ä–µ—Å–ª–∞\n"
                     "üí° –õ—é—Å—Ç—Ä—ã –∏ –ª–∞–º–ø—ã\n"
                     "üñº –î–µ–∫–æ—Ä –∏ –∏–Ω—Ç–µ—Ä—å–µ—Ä\n"
                     "üõã –ú–µ–±–µ–ª—å–Ω—ã–µ —Ä—É—á–∫–∏\n"
                     "üåü –ü–æ–¥—Ä–æ–±–Ω–µ–µ: https://kool.uz")

# –ö–Ω–æ–ø–∫–∞: –î–æ—Å—Ç–∞–≤–∫–∞ –∏ –æ–ø–ª–∞—Ç–∞
@bot.message_handler(func=lambda message: message.text == "üì¶ –î–æ—Å—Ç–∞–≤–∫–∞ –∏ –æ–ø–ª–∞—Ç–∞")
def delivery_handler(message):
    bot.send_message(message.chat.id,
                     "üì¶ *–î–æ—Å—Ç–∞–≤–∫–∞:*\n–ü–æ –¢–∞—à–∫–µ–Ω—Ç—É ‚Äî 1 –¥–µ–Ω—å. –ü–æ —Ä–µ–≥–∏–æ–Ω–∞–º ‚Äî —á–µ—Ä–µ–∑ –∫—É—Ä—å–µ—Ä—Å–∫–∏–µ —Å–ª—É–∂–±—ã –≤ —Ç–µ—á–µ–Ω–∏–µ 2-3 –¥–Ω–µ–π.\n\n"
                     "üí≥ *–û–ø–ª–∞—Ç–∞:*\n–ù–∞–ª–∏—á–Ω—ã–µ, –∫–∞—Ä—Ç–∞, –ø–µ—Ä–µ–≤–æ–¥.\n\nüõ† –°–±–æ—Ä–∫–∞ –ø–æ –¥–æ–≥–æ–≤–æ—Ä—ë–Ω–Ω–æ—Å—Ç–∏.",
                     parse_mode="Markdown")

# –ö–Ω–æ–ø–∫–∞: –°–≤—è–∑–∞—Ç—å—Å—è
@bot.message_handler(func=lambda message: message.text == "üí¨ –°–≤—è–∑–∞—Ç—å—Å—è")
def contact_handler(message):
    bot.send_message(message.chat.id,
                     "üì≤ –ù–∞–ø–∏—à–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –í–∞—à –≤–æ–ø—Ä–æ—Å –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –¥–∞—Ç—å –≤–∞–º –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç ")

# –ö–Ω–æ–ø–∫–∞: –û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É ‚Äî –Ω–∞—á–∞–ª–æ –¥–∏–∞–ª–æ–≥–∞
@bot.message_handler(func=lambda message: message.text == "üìù –û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É")
def request_handler(message):
    bot.send_message(message.chat.id, "–ö–∞–∫ –≤–∞—Å –∑–æ–≤—É—Ç?")
    user_data[message.chat.id] = {}
    bot.register_next_step_handler(message, get_name)

def get_name(message):
    user_data[message.chat.id]['name'] = message.text
    bot.send_message(message.chat.id, "–£–∫–∞–∂–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:")
    bot.register_next_step_handler(message, get_phone)

def get_phone(message):
    user_data[message.chat.id]['phone'] = message.text
    bot.send_message(message.chat.id, "–ß—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç? –ù–∞–ø–∏—à–∏—Ç–µ:")
    bot.register_next_step_handler(message, get_comment)

def get_comment(message):
    user_data[message.chat.id]['comment'] = message.text
    data = user_data[message.chat.id]
    summary = (
        f"üì© –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞:\n\n"
        f"üë§ –ò–º—è: {data['name']}\n"
        f"üìû –¢–µ–ª–µ—Ñ–æ–Ω: {data['phone']}\n"
        f"üí¨ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: {data['comment']}"
    )
    bot.send_message(message.chat.id, "–°–ø–∞—Å–∏–±–æ! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è ‚úÖ")
    bot.send_message(ADMIN_ID, summary)

# AI-–æ—Ç–≤–µ—Ç—ã (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)
@bot.message_handler(func=lambda message: True)
def ask_ai_handler(message):
    try:
        if not message.text.strip():
            bot.send_message(message.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ –≤–æ–ø—Ä–æ—Å.")
            return

        response = client.chat.completions.create(
            model="gpt-4o",
            messages=[
                {"role": "system", "content": load_prompt()},
                {"role": "user", "content": message.text}
            ]
        )
        reply = response.choices[0].message.content
        bot.send_message(message.chat.id, reply)
    except Exception as e:
        bot.send_message(message.chat.id, f"–û—à–∏–±–∫–∞: {e}")

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
bot.polling()
